'use client';
import { motion } from "framer-motion";

export default function VulnerabilityScanningAnimation() {
  return (
    <div className="relative w-full h-[340px] md:h-[400px] bg-gradient-to-br from-[#181924] to-[#23242e] overflow-visible rounded-xl flex items-center">
      <svg viewBox="0 0 400 340" className="absolute left-0 top-0 w-[400px] h-[340px] z-0">
        {/* Scan ring pulse */}
        <motion.circle
          cx="200"
          cy="170"
          r="60"
          fill="none"
          stroke="#38bdf8"
          strokeWidth="2.5"
          initial={{ opacity: 0.5, r: 40 }}
          animate={{ opacity: [0.5, 0], r: [40, 120] }}
          transition={{ repeat: Infinity, duration: 2, ease: "linear" }}
        />
        {/* Main scan ring */}
        <circle cx="200" cy="170" r="60" fill="none" stroke="#38bdf8" strokeWidth="2" opacity="0.18" />
        {/* Laser sweep */}
        <motion.path
          d="M200,170 L200,60 A110,110 0 0,1 310,170 Z"
          fill="url(#laserSweep)"
          animate={{ rotate: 360 }}
          transition={{ repeat: Infinity, duration: 3, ease: "linear" }}
          style={{ transformOrigin: "200px 170px" }}
        />
        <defs>
          <radialGradient id="laserSweep" cx="50%" cy="50%" r="80%">
            <stop offset="0%" stopColor="#38bdf8cc" stopOpacity="0.5" />
            <stop offset="100%" stopColor="#38bdf800" stopOpacity="0" />
          </radialGradient>
        </defs>
        {/* Data nodes */}
        <g>
          {/* Node 1 */}
          <motion.circle cx="120" cy="220" r="14" fill="#1e293b" stroke="#00fff7" strokeWidth="3" filter="url(#nodeGlow)" animate={{ r: [14, 18, 14] }} transition={{ repeat: Infinity, duration: 2 }} />
          <text x="120" y="225" fill="#00fff7" fontSize="12" fontFamily="monospace" textAnchor="middle">API</text>
          {/* Node 2 */}
          <motion.circle cx="280" cy="220" r="14" fill="#1e293b" stroke="#00ff99" strokeWidth="3" filter="url(#nodeGlow)" animate={{ r: [14, 18, 14] }} transition={{ repeat: Infinity, duration: 2, delay: 0.5 }} />
          <text x="280" y="225" fill="#00ff99" fontSize="12" fontFamily="monospace" textAnchor="middle">DB</text>
          {/* Node 3 */}
          <motion.circle cx="200" cy="100" r="14" fill="#1e293b" stroke="#facc15" strokeWidth="3" filter="url(#nodeGlow)" animate={{ r: [14, 18, 14] }} transition={{ repeat: Infinity, duration: 2, delay: 1 }} />
          <text x="200" y="105" fill="#facc15" fontSize="12" fontFamily="monospace" textAnchor="middle">WEB</text>
        </g>
        {/* Data lines */}
        <motion.line x1="200" y1="170" x2="120" y2="220" stroke="#00fff7" strokeWidth="2" initial={{ opacity: 0.5 }} animate={{ opacity: [0.5, 1, 0.5] }} transition={{ repeat: Infinity, duration: 2 }} />
        <motion.line x1="200" y1="170" x2="280" y2="220" stroke="#00ff99" strokeWidth="2" initial={{ opacity: 0.5 }} animate={{ opacity: [0.5, 1, 0.5] }} transition={{ repeat: Infinity, duration: 2, delay: 0.5 }} />
        <motion.line x1="200" y1="170" x2="200" y2="100" stroke="#facc15" strokeWidth="2" initial={{ opacity: 0.5 }} animate={{ opacity: [0.5, 1, 0.5] }} transition={{ repeat: Infinity, duration: 2, delay: 1 }} />
        {/* Center bug icon */}
        <g>
          <motion.circle cx="200" cy="170" r="22" fill="#ff2a2a" opacity="0.18" animate={{ r: [22, 30, 22], opacity: [0.18, 0.08, 0.18] }} transition={{ repeat: Infinity, duration: 2 }} />
          <motion.circle cx="200" cy="170" r="14" fill="#ff2a2a" animate={{ r: [14, 18, 14], opacity: [0.7, 0.2, 0.7] }} transition={{ repeat: Infinity, duration: 2 }} />
          <text x="200" y="176" textAnchor="middle" fontSize="22" fontFamily="monospace" fill="#fff">&#128027;</text>
        </g>
        {/* Glow filter */}
        <defs>
          <filter id="nodeGlow" x="-50%" y="-50%" width="200%" height="200%">
            <feGaussianBlur stdDeviation="4" result="coloredBlur" />
            <feMerge>
              <feMergeNode in="coloredBlur" />
              <feMergeNode in="SourceGraphic" />
            </feMerge>
          </filter>
        </defs>
      </svg>
    </div>
  );
} 